:root {
  --branco-principal: #FFFFFF;
  --cinza-secundário: #cococo;
  --botao-azul: #167BF7;
  --cor-de-fundo: #00030C;
  --fonte-principal: 'inter';
  --botao-azul-efeito: #3c92fa; /* botão muda de cor */
}

body {
    background-color:  var(--cor-de-fundo);
    color: var(--branco-principal);
    font-family: var(--branco-principal);
    font-size: 16px;
    font-weight: 400;
}

*{
  margin: 0;
  padding: 0;
}

.principal{
  background-image: url("img/Background.png");
  background-repeat: no-repeat; 
  background-size: contain;
  text-align: center; /*fizemos o alinahmento de todo o texto do container,
                        usando apenas a classe principal que criamos na section dentro da div(que tem display block) text-align: center; alinhou tudo 
                        que estava em display block (elementos in line) , um bloco só, isso facilita o processo.(*/
}

.container {
  height: 100vh;
  display: grid;
  grid-template-columns: 50% 50%; 
}

.container__botao{
  background-color: var(--botao-azul);
  border-radius: 5px;
  padding: 1em;
  color: var(--branco-principal);
  display: block;
  text-decoration: none;
  margin-bottom: 1em; /*espaçamento entre botões */
  
}

.botao_secundario{
  background-color: transparent;
  border: 2px solid var(--branco-principal);
}

.container__aviso{
  font-size: 12px;
  color: var(--cinza-secundário);

}

.container__titulo{
  font-size: 28px;
  font-weight: 700;
}

.container__imagem{
  margin: 1em 0 2em 0; /*espaçamento entre a imagem do título e a imagen, foi preciso criar
                         uma classe na linah da imagem no html para estilzar no css.*/
}

.container__caixa{
  margin: 0 6em; /*esxite o espaçamento da esquerda e direita (vai separar todo o conteundo
                   do container da lateral esquerda)*/
}


.secundario__imagem{
  width: 80%;
}

.secundario{
  align-items: center;
  margin: 0 10em;
}

.descricao__titulo{
  font-weight: 700;
  font-size: 48px;
  color: var(--branco-principal);
  margin-bottom: 0.1em;
}


.descricao__texto{
  color: var(--cinza-secundário);
}

.secundario__botao{
  display: inline-block; /* O display unline-block pega o que há de melhor em inline e block e transformou o elemrnto em linha*/
  margin-top: 1em;
}

.container__descricao{
  padding: 2em;
}

/*_____________________________________________________________________________________________________________________________*/

.dispositivos__lista{
  display: flex;
  justify-content: center; /* deixa os icones ou imagens no certro*/
  list-style-type:none; /*retirra os ponts da lista*/
  margin: 05em 0;
  
}

.dispositivos{
  text-align: center; /* os textos do container ficaram alinahdos ao centro*/
}

.dispositivos__titulo{
  font-size: 48px; /* o tamanho da fonte do titulo*/
  color: var(--branco-principal);
}

.dispositivos__item{
  font-size: 58px;
  color: var(--branco-principal);
}

/*_____________________________________________________________________________________________________________________________*/

.rodape__lista{
  display: flex; /* exatamanete como nos dispoditivos, colocamos o display flex, para alinhar a lista*/
  color: var(--branco-principal);
  list-style-type:none;
  justify-content:center;
  

}

.rodape{
  text-align: center;

}


.lista__link{
  margin: 1.5em;
  font-size: 18px;
  line-height: 24px;
  color: var(--branco-principal);
  
}


a {
  text-decoration: none;
  list-style-type:none;
  color: var(--branco-principal);
}


.rodape__direitos{
text-align: center;
margin: 2em;
font-size: 14px;
color: var(--branco-principal);
}


.rodape__texto{
text-align: center;
margin: 2em;
font-size: 14px;
color: var(--branco-principal);
}

.lista__link a:hover{
  color: var(--botao-azul); /* quando o mouse passa no link , na palvra ela muda de cor*/
}

.lista__link a:active{
  color: chartreuse; /* quando clica o mouse , na palvra ela muda de cor*/
}

.container__botao:hover{
  background-color: var(--botao-azul-efeito); /* efeito acontece quando passado o mouse em cima, ele muda a cor da fonte e do botão*/
  color: var(--cor-de-fundo);
}

/*Nessa aula aprendemos:
Usar flexbox e seu significado;
Flex-containers, flex-itens, flex-direction;
A tag footer;
Colocar o conhecimento em prática;
Pseudo-classes no CSS: hover e active.*/

                                                           /*ANOTAÇÕES DA AULA*/

/* Para saber mais: CSS interativo?
PRÓXIMA ATIVIDADE

Uma pseudo-classe CSS é uma propriedade que é adicionada ao final dos seletores que especifica o estado que esse elemento está. 
Ele detecta, por exemplo, se o elemento está com um mouse em cima dele, construindo uma experiência interativa com o usuário. 
Aqui, você pode conferir uma lista de pseudo-classes para testar no seu projeto:

:focus: é aplicada quando um elemento está em foco, pode ser pelo clique do mouse ou seleção pelo teclado. 
Um exemplo é quando os campos de escrita em formulários estão selecionados para o usuário escrever.

:hover: detecta quando um usuário está com o mouse em cima do elemento, sem necessariamente estar clicando.

:active: detecta quando o elemento está ativo, quando há uma interação, por exemplo: o link <a> está sendo clicado.

:visited: detecta quando o link <a> já foi visitado, ou seja, se você já clicou anteriormente naquele link.

:link: detecta quando é um link <a> que nunca foi clicado antes.

A sintaxe correta de uso de pseudo-classes é essa:

      seletor:pseudo-classe {
        propriedade: valor;
      }COPIAR CÓDIGO
      Um exemplo de utilização na prática seria este de trocar a cor do botão para azul quando o mouse estiver em cima dele:

      .container__botao:hover {
        background-color: blue;
      }COPIAR CÓDIGO
      Curiosidade
      Lembra que na primeira aula colocamos o termo :root no styles.css? Percebe que a estrutura é bem semelhante ao que estamos vendo agora? 
      Isso acontece porque o root também é uma pseudo-classe!

Porém, essa pseudo-classe não tem um intuito mais interativo, ou seja, não há como usar pra trocar alguma coisa quando o usuário interage. 
Sua especificidade é bem alta, representando o documento inteiro. É comumente usada para a declaração de variáveis CSS.

Você pode ler mais sobre pseudo-classes no MDN Web Docs, um projeto colaborativo de código aberto que documenta tecnologias de plataforma da Web, 
incluindo CSS, HTML, JavaScript e APIs da Web.
*/

